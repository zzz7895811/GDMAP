@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>编辑信息</title>
    <script language="javascript"
            src="//webapi.amap.com/maps?v=1.4.14&key=7dd5aa1f7b871ff6af922a1cc315f419"></script>
    <script type="text/javascript" src="https://cache.amap.com/lbs/static/addToolbar.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/axios.js"></script>
    <script src="~/Scripts/ElementUI/element-ui.js"></script>
    <link href="~/Content/ElementUI/element-ui.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css" />
    <style>
        body, html {
            margin: 0;
            padding: 0;
            font: 12px/16px Verdana, Helvetica, Arial, sans-serif;
            width: 100%;
            height: 100%
        }

        .container {
            height: 100%
        }

        html, body, #container {
            height: 100%;
            width: 100%;
        }

        .custom-input-card {
            width: 18rem;
        }

            .custom-input-card .btn:last-child {
                margin-left: 1rem;
            }

        .content-window-card {
            position: relative;
            width: 23rem;
            padding: 0.75rem 0 0 1.25rem;
            box-shadow: none;
            bottom: 0;
            left: 0;
        }

            .content-window-card p {
                height: 2rem;
            }

        .amap-logo {
            bottom: -100px;
            display: none;
        }

        .amap-copyright {
            bottom: -100px;
            display: none;
        }
        #panel {
            position: absolute;
            background-color: white;
            max-height: 90%;
            overflow-y: auto;
            top: 500px;
            right: 10px;
            width: 280px;
        }
    </style>

</head>
<body>
    <div id="app" style="width:600px">

        <el-form ref="form" :model="form" label-width="100px" style="margin-top:20px" :rules='rules'>
            <el-form-item label="小区名称" prop="name">
                <el-input v-model="form.name"></el-input>
                <a href="javascript:void(0)" id="search" v-on:click="search">查询</a>
            </el-form-item>
            <el-form-item label="简介标题">
                <el-input v-model="form.title"></el-input>
            </el-form-item>
            <el-form-item label="小区简介">
                <el-input v-model="form.intro"></el-input>
            </el-form-item>
            <el-form-item label="中心位置" prop="center">
                <el-input v-model="form.center"></el-input>
            </el-form-item>
            <el-form-item label="坐标" prop="path">
                <el-input v-model="form.path"
                          type="textarea"
                          :rows="4"></el-input>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" v-on:click="onSubmit">保存</el-button>
                <el-button type="button" v-on:click="Back">返回</el-button>
            </el-form-item>
        </el-form>
    </div>
    <div class="input-card" style="width:16rem;z-index:9999;bottom:13rem">
        <h4>地图点击相关事件</h4>
        <div>
            <div class="input-item">
                <button id="clickOn" class="btn" style="margin-right:1rem;">开启点击</button>
                <button id="clickOff" class="btn">解除点击</button>

            </div>
        </div>
    </div>
    <div id="container" style="width:100%; height:75%;resize:both;">

    </div>
    <div id="panel"></div>
</body>
</html>

<script>
  var  map = new AMap.Map('container', {
        resizeEnable: true,
        rotateEnable: true,
        pitchEnable: true,
        showLabel: true,
        zoom: 17,
        zooms: [3, 20],
        center: [112.45131, 34.61500]
    });
   
 
    document.getElementById("clickOn").onclick = clickOn;
    document.getElementById("clickOff").onclick = clickOff;
    function clickOn() {
        //绑定事件
        map.on('click', showInfoClick);
    }
    function clickOff() {
        map.off('click', showInfoClick);
    }
    function showInfoClick(e) {
        vue._data.form.path+= e.lnglat.getLng() + ',' + e.lnglat.getLat() + ";";
    }
   var vue=  new Vue({
        el: '#app',
        data: function () {
            return {
                dialogVisible:false,
                form: {
                    id:0,
                    name: "",
                    path: "",
                    center: "",
                    title: "",
                    intro:""
                },
                rules: {
                    name: [
                        { required: true, message: "请输入小区名称", trigger: "change" }
                    ],
                    path: [
                        { required: true, message: "请输入小区坐标", trigger: "change" }
                    ],
                    center: [
                        { required: true, message: "请输入小区中心位置", trigger: "change" }
                    ],
                },
            }
        },

        mounted: function () {
            this.Init();
        },
        methods: {
            search() {
                const _this = this;
                AMap.service(["AMap.PlaceSearch"], function () {
                    //构造地点查询类
                    var placeSearch = new AMap.PlaceSearch({
                        pageSize: 7, // 单页显示结果条数
                        pageIndex: 1, // 页码
                        city: "0379", // 兴趣点城市
                        citylimit: true,  //是否强制限制在设置的城市内搜索
                        map: map, // 展现结果的地图实例
                        panel: "panel", // 结果列表将在此容器中进行展示。
                        autoFitView: true // 是否自动调整地图视野使绘制的 Marker点都处于视口的可见范围
                    });

                    placeSearch.search(_this.form.name);
                    AMap.event.addListener(placeSearch, 'listElementClick', onComplete);

                });

                function onComplete(d) {
                    _this.form.title = d.data.name;
                    _this.form.center = d.data.location.lng + "," + d.data.location.lat;
                }
            },
            handleClose(d) { d()},
            Init() {
                var model = '@Html.Raw(ViewBag.EditModel)'
                this.form = JSON.parse(model);
            },
            StartPath() {
                alert("abc")
                this.map.on('click', this.showInfoClick);
            },
            Back() {
                window.location.href = "/Map/List"
            },
            onSubmit() {
                const _this = this;
                this.$refs["form"].validate(valid => {
                    if (valid) {
                        axios.post("/Map/EditData", { model: _this.form }).then(function (response) {
                            if (response.data == "True") {
                                window.location.href = "/Map/List"
                            }
                        })
                    }
                })
            }
        }
    })
</script>